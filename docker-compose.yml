services:
  web:
    build: .
    container_name: health_booking_system
    command: uv run gunicorn health_booking_system.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:16
    container_name: health_postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mynetwork

  adminer:
    image: adminer
    container_name: adminer-container-2
    restart: always
    depends_on:
      - db
    ports:
      - 8080:8080
    networks:
      - mynetwork

volumes:
  postgres_data:
networks:
  mynetwork:
    driver: bridge